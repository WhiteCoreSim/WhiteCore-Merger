[Config]

; The port number for the asset server to listen on.
listen_port = 8003

; Points to an XML file which describes assets to load on startup.
; This is "./assets/AssetSets.xml" by default and can be changed below.
;assetset_location = ./assets/AssetSets.xml

[Plugins]

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Asset Storage Provider
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; SimpleAssetStorage is a very basic storage system for the purposes of
; illustrating a storage backend example. The assets are stored in
; SimpleAssets/ and TempAssets/ (which is deleted when the server shuts down).
; Metadata is generated for all of the files at startup and when new assets are
; uploaded.
;asset_storage_provider = SimpleAssetStorage

; OpenSimAssetStorage connects to a database that has an assets table created
; by OpenSim. This backend combined with the OpenSimFrontend will allow the asset
; server to be used as a drop-in replacement for OpenSim.Grid.AssetServer.exe,
; while also allowing other frontends to run.
asset_storage_provider = OpenSimAssetStorage

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Inventory Storage Provider
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; SimpleInventoryStorage is a very basic inventory storage system for the
; purposes of illustrating an inventory backend example. The inventory is stored
; in SimpleInventory/ by creating a folder for each agent that contains all of
; the inventory items and folders serialized as XML files.
;inventory_storage_provider = SimpleInventoryStorage

; OpenSimInventoryStorage connects to a database that has an inventory table
; created by OpenSim. This backend combined with the OpenSimInventoryFrontend
; will allow the server to be used as a drop-in replacement for
; OpenSim.Grid.InventoryServer.exe, while also allowing other frontends to run.
; *** NOTE: Inventory is not currently implemented.
inventory_storage_provider = OpenSimInventoryStorage

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Authentication Provider
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; NullAuthentication does nothing.
authentication_provider = NullAuthentication

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Authorization Provider
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Authorize all is a dummy authorization module that allows all requests for
; metadata, data, and asset creation. Use this extension if your primary
; storage provider or front-end interface does not support authentication.
authorization_provider = AuthorizeAll

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Metrics Provider
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; NullMetrics contains empty logging functions. Use this metrics provider if
; you want to disable metrics collection and reporting.
metrics_provider = NullMetrics

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Frontends
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Specify multiple frontends as a comma-separated list.

; ReferenceFrontend is a simple frontend that provides three basic REST
; methods. /assetid/metadata will return the metadata for an asset (currently in
; LLSD format, that will change soon). /assetid/data will return the raw asset
; data with proper Content-Type and Content-Disposition headers to make
; downloading assets in a web browser easy.

; OpenSimAssetFrontend is a frontend that matches the existing OpenSim XML for
; transferring grid assets. This will allow the asset server to function as a
; drop-in replacement for OpenSim.Grid.AssetServer.exe, and can be combined with
; OpenSimAssetStorage to provide an identical replacement, or any other asset
; storage backend.

; OpenSimInventoryFrontend is a frontend that matches the existing OpenSim XML
; for transferring inventory. This will allow the inventory server to function as
; a drop-in replacement for OpenSim.Grid.InventoryServer.exe, and can be combined
; with OpenSimInventoryStorage to provide an identical replacement, or any other
; inventory storage backend.
; *** NOTE: Inventory is not currently implemented.

; BrowseFrontend is an HTML interface for browsing through the asset store.

frontends = ReferenceFrontend,OpenSimAssetFrontend,OpenSimInventoryFrontend,BrowseFrontend

[OpenSim]
; The OpenSim section applies to the OpenSim plugin (OpenSimAssetStorage,
; OpenSimInventoryStorage, OpenSimAssetFronend, OpenSimInventoryFrontend).

; The database provider determines which database to use. Any database backend
; supported by OpenSim is supported.
asset_database_provider = "OpenSim.Data.SQLite.dll"
;asset_database_provider = "OpenSim.Data.MySQL.dll"
;asset_database_provider = "OpenSim.Data.NHibernate.dll"

inventory_database_provider = "OpenSim.Data.SQLite.dll"
;inventory_database_provider = "OpenSim.Data.MySQL.dll"
;inventory_database_provider = "OpenSim.Data.NHibernate.dll"

; Database connection string used by the database backend.

; For SQLite
asset_database_connect = "URI=file:Asset.db,version=3"
inventory_database_connect = "URI=file:Inventory.db,version=3"

; For MySQL
;asset_database_connect = "Server=localhost; Database=opensim; User=changeme; Password=changeme;"
;inventory_database_connect = "Server=localhost; Database=opensim; User=changeme; Password=changeme;"

; For NHibernate
;asset_database_connect = "SQLiteDialect;SQLite20Driver;Data Source=file:Asset.db;Version=3"
;inventory_database_connect = "SQLiteDialect;SQLite20Driver;Data Source=file:Asset.db;Version=3"
